{"version":3,"sources":["agenda/date.js","utils/parse.js","agenda/task.js","placeholder.js","agenda/tasks.js","agenda/day.js","agenda/agenda.js","agenda/index.js","overlay.js","utils/storage.js","App.js","utils/time.js","serviceWorker.js","index.js"],"names":["DateWrapper","styled","div","_templateObject","DayOfWeek","p","_templateObject2","DayOfMonth","_templateObject3","Date","_this$props","this","props","day","Object","objectWithoutProperties","dayOfMonth","format","dayOfWeek","react_default","a","createElement","Component","CATEGORY","CATEGORY_INFO","_CATEGORY_INFO","defineProperty","emoji","color","parseFile","_x","_parseFile","apply","arguments","_callee","file","regenerator_default","wrap","_context","prev","next","Promise","resolve","reject","reader","FileReader","onload","e","data","result","split","map","line","readAsText","abrupt","sent","stop","parseData","tasks","i","push","forEach","_ref","_ref2","slicedToArray","dayStr","category","text","time","match","moment","weekday","task","completed","TaskWrapper","task_templateObject","Task","onCompleted","assign","onClick","Placeholder","TasksWrapper","tasks_templateObject","Tasks","length","placeholder_Placeholder","task_Task","key","defaultProps","DayWrapper","day_templateObject","FlexDate","day_templateObject2","FlexTasks","day_templateObject3","Day","AgendaWrapper","agenda_templateObject","Agenda","week","day_Day","utc","j","OverlayWrapper","overlay_templateObject","Overlay","visible","STORAGE_KEYS","TASKS","TASK_LOG","WEEK_START","setValue","value","processor","undefined","localStorage","setItem","getValue","options","fallback","getItem","AppWrapper","App_templateObject","Title","h1","App_templateObject2","App","state","_onDrop","acceptedFiles","rejectedFiles","_acceptedFiles","console","log","_this","setState","JSON","stringify","_onCompleted","toConsumableArray","startOf","clone","add","buildWeek","parse","weekStart","item","isSame","taskLog","_this2","_this$state","es","disableClick","onDrop","getRootProps","getInputProps","isDragActive","overlay_Overlay","agenda","Boolean","window","location","hostname","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98210810.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\n\nconst DateWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst DayOfWeek = styled.p`\n  font-size: 1.5em;\n`;\n\nconst DayOfMonth = styled.p`\n  font-weight: bold;\n  font-size: 2.25em;\n`;\n\nexport default class Date extends Component {\n  static propTypes = {\n    day: PropTypes.instanceOf(moment).isRequired\n  };\n\n  render() {\n    const { day, ...props } = this.props;\n    const dayOfMonth = day.format(\"D\");\n    const dayOfWeek = day.format(\"ddd\");\n\n    return (\n      <DateWrapper {...props}>\n        <DayOfWeek>{dayOfWeek}</DayOfWeek>\n        <DayOfMonth>{dayOfMonth}</DayOfMonth>\n      </DateWrapper>\n    );\n  }\n}\n","import moment from \"moment\";\n\nexport const CATEGORY = {\n  WORK: \"work\",\n  EDUCATION: \"education\",\n  LEARNING: \"learning\",\n  PERSONAL: \"personal\",\n  FITNESS: \"fitness\"\n};\n\nexport const CATEGORY_INFO = {\n  [CATEGORY.WORK]: {\n    emoji: \"üìä\",\n    color: \"rgb(0, 117, 255)\"\n  },\n  [CATEGORY.EDUCATION]: {\n    emoji: \"üéì\",\n    color: \"rgb(188, 27, 208)\"\n  },\n  [CATEGORY.LEARNING]: {\n    emoji: \"üî¨\",\n    color: \"rgb(18, 208, 122)\"\n  },\n  [CATEGORY.PERSONAL]: {\n    emoji: \"üñå\",\n    color: \"rgb(230, 20, 127)\"\n  },\n  [CATEGORY.FITNESS]: {\n    emoji: \"üèÄ\",\n    color: \"rgb(233, 165, 33)\"\n  }\n};\n\nexport async function parseFile(file) {\n  return await new Promise((resolve, reject) => {\n    let reader = new FileReader();\n    reader.onload = (e) => {\n      const data = reader.result.split(\"\\n\").map((line) => line.split(\",\"));\n      resolve(data);\n    }\n    reader.readAsText(file);\n  });\n}\n\nexport function parseData(data) {\n  let tasks = [];\n  for (let i = 0; i < 7; i++) {\n    tasks.push([]);\n  }\n  data.forEach(([dayStr, category, text, time]) => {\n    dayStr.match(/\\w{2}/g).forEach(day => {\n      const i = moment(day, \"dd\").weekday();\n      let task = {\n        completed: false,\n        category,\n        text\n      };\n      if (time) {\n        task.time = time;\n      }\n      tasks[i].push(task);\n    });\n  });\n  return tasks;\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { CATEGORY_INFO } from \"../utils/parse\";\n\nconst TaskWrapper = styled.div`\n  border-radius: 3px;\n  color: #fff;\n  background-color: ${props => props.color};\n  padding: 0.5em;\n  font-size: font-size: 0.7em;\n  ${props => {\n    if (props.completed) {\n      return `\n          opacity: 0.35;\n        `;\n    }\n  }}\n\n  &:not(:last-of-type) {\n    margin-bottom: 0.75em;\n  }\n\n  &::before {\n    content: \"${props => props.emoji}\";\n    margin-right: 0.5em;\n    font-size: 0.85em;\n  }\n`;\n\nexport default class Task extends Component {\n  static propTypes = {\n    onCompleted: PropTypes.func.isRequired,\n    completed: PropTypes.bool.isRequired,\n    category: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    time: PropTypes.string\n  };\n\n  render() {\n    const { onCompleted, completed, category, text, time } = this.props;\n\n    return (\n      <TaskWrapper\n        onClick={onCompleted}\n        completed={completed}\n        {...CATEGORY_INFO[category]}\n      >\n        <span>{text}</span>\n        <br />\n        {time && <span>{time}</span>}\n      </TaskWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Placeholder extends Component {\n  static propTypes = {\n    emoji: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n  };\n\n  render() {\n    const { emoji, text } = this.props;\n\n    return (\n      <div>\n        <span>{emoji}</span>&nbsp;<span>{text}</span>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Task from \"./task\";\nimport Placeholder from \"../placeholder\";\n\nconst TasksWrapper = styled.div`\n  margin-left: 0.75em;\n`;\n\nexport default class Tasks extends Component {\n  static propTypes = {\n    onCompleted: PropTypes.func.isRequired,\n    tasks: PropTypes.arrayOf(\n      PropTypes.shape({\n        completed: PropTypes.bool.isRequired,\n        category: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired,\n        time: PropTypes.string\n      })\n    )\n  };\n\n  static defaultProps = {\n    tasks: []\n  };\n\n  render() {\n    const { tasks, onCompleted, ...props } = this.props;\n\n    return (\n      <TasksWrapper {...props}>\n        {!tasks.length && <Placeholder emoji=\"üò¥\" text=\"Nothing to do today\" />}\n        {tasks.map((task, i) => (\n          <Task key={i} onCompleted={() => onCompleted(i)} {...task} />\n        ))}\n      </TasksWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport Date from \"./date\";\nimport Tasks from \"./tasks\";\n\nconst DayWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  padding: 0.75rem;\n  border-radius: 3px;\n  margin-bottom: 0.75em;\n  border: 1px solid #ededed;\n`;\n\nconst FlexDate = styled(Date)`\n  flex: 2 0 0;\n`;\n\nconst FlexTasks = styled(Tasks)`\n  flex: 8 0 0;\n`;\n\nexport default class Day extends Component {\n  static propTypes = {\n    onCompleted: PropTypes.func.isRequired,\n    day: PropTypes.instanceOf(moment).isRequired,\n    tasks: PropTypes.arrayOf(\n      PropTypes.shape({\n        completed: PropTypes.bool.isRequired,\n        category: PropTypes.string.isRequired,\n        text: PropTypes.string.isRequired,\n        time: PropTypes.string\n      })\n    )\n  };\n\n  render() {\n    const { onCompleted, day, tasks } = this.props;\n\n    return (\n      <DayWrapper>\n        <FlexDate day={day} />\n        <FlexTasks tasks={tasks} onCompleted={onCompleted} />\n      </DayWrapper>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport Day from \"./day\";\n\nconst AgendaWrapper = styled.div`\n  max-width: 700px;\n  margin: 0 auto;\n`;\n\nexport default class Agenda extends Component {\n  static propTypes = {\n    onCompleted: PropTypes.func.isRequired,\n    week: PropTypes.arrayOf(PropTypes.instanceOf(moment)).isRequired,\n    tasks: PropTypes.arrayOf(\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          completed: PropTypes.bool.isRequired,\n          category: PropTypes.string.isRequired,\n          text: PropTypes.string.isRequired,\n          time: PropTypes.string\n        })\n      )\n    )\n  };\n\n  static defaultProps = {\n    tasks: []\n  };\n\n  render() {\n    const { onCompleted, week, tasks } = this.props;\n\n    return (\n      <AgendaWrapper>\n        {week.map((day, i) => (\n          <Day\n            key={day.utc()}\n            onCompleted={j => onCompleted(i, j)}\n            day={day}\n            tasks={tasks[i]}\n          />\n        ))}\n      </AgendaWrapper>\n    );\n  }\n}\n","import Agenda from \"./agenda\";\nexport default Agenda;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst OverlayWrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(255, 255, 255, 0.85);\n  cursor: pointer;\n`;\n\nexport default class Overlay extends Component {\n  static propTypes = {\n    visible: PropTypes.bool\n  };\n\n  static defaultProps = {\n    visible: false\n  };\n\n  render() {\n    const { visible } = this.props;\n\n    if (!visible) {\n      return <noscript />;\n    }\n\n    return (\n      <OverlayWrapper>\n        <h3>üóÇ Upload Agenda</h3>\n      </OverlayWrapper>\n    );\n  }\n}\n","export const STORAGE_KEYS = {\n  TASKS: \"tasks\",\n  TASK_LOG: \"task_log\",\n  WEEK_START: \"week_start\"\n};\n\nexport function setValue(key, value, options = {}) {\n  const { processor } = options;\n  if (value && processor) {\n    value = processor(value);\n  }\n  localStorage.setItem(key, value);\n}\n\nexport function getValue(key, options = {}) {\n  const { fallback, processor } = options;\n  let value = localStorage.getItem(key);\n  if (!value && fallback) {\n    return fallback;\n  } else if (value && processor) {\n    value = processor(value);\n  }\n  return value;\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport Dropzone from \"react-dropzone\";\nimport { buildWeek } from \"./utils/time\";\nimport Agenda from \"./agenda\";\nimport Overlay from \"./overlay\";\nimport { STORAGE_KEYS, setValue, getValue } from \"./utils/storage\";\nimport { parseFile, parseData } from \"./utils/parse\";\nimport moment from \"moment\";\n\nconst AppWrapper = styled.div`\n  padding: 2em 1rem 1rem;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  margin-bottom: 1em;\n`;\n\nexport default class App extends Component {\n  state = {\n    week: [],\n    tasks: []\n  };\n\n  componentDidMount() {\n    const week = buildWeek();\n    const tasks = getValue(STORAGE_KEYS.TASKS, { fallback: [], processor: JSON.parse });\n    const weekStart = getValue(STORAGE_KEYS.WEEK_START, {\n      processor: (item) => moment(JSON.parse(item))\n    });\n    console.log(weekStart, week[0])\n    if (!weekStart) {\n      setValue(STORAGE_KEYS.WEEK_START, week[0], { processor: JSON.stringify });\n    } else if (!weekStart.isSame(week[0])) {\n      let taskLog = getValue(STORAGE_KEYS.TASK_LOG, { fallback: [], processor: JSON.parse });\n      taskLog.push([...tasks]);\n      setValue(STORAGE_KEYS.TASK_LOG, taskLog, { processor: JSON.stringify });\n      tasks.map(day => day.map(task => (task.completed = false)));\n    }\n    this.setState({ week, tasks });\n  }\n\n  _onDrop = async (acceptedFiles, rejectedFiles) => {\n    const [ file ] = acceptedFiles;\n    const data = await parseFile(file);\n    console.log(data);\n    const tasks = parseData(data);\n    this.setState({ tasks });\n    setValue(STORAGE_KEYS.TASKS, tasks, { processor: JSON.stringify });\n  }\n\n  _onCompleted = (i, j) => {\n    let { tasks } = this.state;\n    tasks = [...tasks];\n    tasks[i][j].completed = !tasks[i][j].completed;\n    this.setState({ tasks });\n    setValue(STORAGE_KEYS.TASKS, tasks, { processor: JSON.stringify });\n  };\n\n  render() {\n    const { week, tasks } = this.state;\n\n    return (\n      <AppWrapper>\n        <Title>Welcome back!</Title>\n        <Dropzone disableClick onDrop={this._onDrop}>\n          {({ getRootProps, getInputProps, isDragActive }) => {\n            return (\n              <div {...getRootProps()}>\n                <Overlay visible={isDragActive} />\n                <Agenda\n                  week={week}\n                  tasks={tasks}\n                  onCompleted={this._onCompleted}\n                />\n                <input {...getInputProps()} />\n              </div>\n            );\n          }}\n        </Dropzone>\n      </AppWrapper>\n    );\n  }\n}","import moment from \"moment\";\n\nexport function buildWeek() {\n  const startDay = moment().startOf(\"isoWeek\");\n  let week = [startDay];\n  for (let i = 0; i < 6; i++) {\n    const day = week[week.length - 1].clone().add(1, \"d\");\n    week.push(day);\n  }\n  return week;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}